name: Cutter CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-16.04, macos-latest]
      # Prevent one job from pausing the rest
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true # 'recursive' 'true' or 'false'
    - name: apt dependencies
      if: contains(matrix.os, 'ubuntu')
      run: sudo apt-get install ninja-build libgraphviz-dev
    - name: homebrew dependencies
      if: contains(matrix.os, 'macos')
      run: cd scripts; brew bundle
    - name: Pipenv for Github Actions
      uses: VaultVulp/action-pipenv@v1.0.0
    # TODO: Only for linux and if isn't applied for some reason, use platform python for now - 
    # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners
    #- name: Setup Python environment
    #  if: contains(matrix.os, 'ubuntu')
    #  uses: actions/setup-python@v1.1.1
    #  with:
    #    # Version range or exact version of a Python version to use, using semvers version range syntax.
    #    python-version: 3.7.5
    #    # The target architecture (x86, x64) of the Python interpreter.
    #    architecture: x64
    - name: py dependencies
      run: |
        pip install meson
    - name: cmake ubuntu
      if: contains(matrix.os, 'ubuntu')
      run: |
        scripts/fetch_deps.sh
        source cutter-deps/env.sh
        export LD_LIBRARY_PATH="`llvm-config --libdir`:$LD_LIBRARY_PATH"
        source scripts/prepare_breakpad_linux.sh
        export PKG_CONFIG_PATH="$CUSTOM_BREAKPAD_PREFIX/lib/pkgconfig:$CUSTOM_PYTHON_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
        mkdir build
        cd build
        cmake \
                -DCMAKE_BUILD_TYPE=Release \
                -DPYTHON_LIBRARY="$CUTTER_DEPS_PYTHON_PREFIX/lib/libpython3.6m.so.1.0" \
                -DPYTHON_INCLUDE_DIR="$CUTTER_DEPS_PYTHON_PREFIX/include/python3.6m" \
                -DPYTHON_EXECUTABLE="$CUTTER_DEPS_PYTHON_PREFIX/bin/python3" \
                -DCUTTER_ENABLE_PYTHON=ON \
                -DCUTTER_ENABLE_PYTHON_BINDINGS=ON \
                -DCUTTER_ENABLE_CRASH_REPORTS=ON \
                -DCUTTER_USE_BUNDLED_RADARE2=ON \
                ../src && \
            make -j4
    - name: cmake macos
      if: contains(matrix.os, 'macos')
      run: |
        scripts/fetch_deps.sh
        source cutter-deps/env.sh
        export PATH=/usr/local/opt/llvm/bin:$PATH
        source scripts/prepare_breakpad_macos.sh
        sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
        export PKG_CONFIG_PATH="$CUSTOM_BREAKPAD_PREFIX/lib/pkgconfig:$CUSTOM_PYTHON_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH"
        mkdir build
        cd build
        cmake \
                -DCMAKE_BUILD_TYPE=Release \
                -DPYTHON_LIBRARY="$CUTTER_DEPS_PYTHON_PREFIX/lib/libpython3.6m.dylib" \
                -DPYTHON_INCLUDE_DIR="$CUTTER_DEPS_PYTHON_PREFIX/include/python3.6m" \
                -DPYTHON_EXECUTABLE="$CUTTER_DEPS_PYTHON_PREFIX/bin/python3" \
                -DCUTTER_ENABLE_PYTHON=ON \
                -DCUTTER_ENABLE_PYTHON_BINDINGS=ON \
                -DCUTTER_ENABLE_CRASH_REPORTS=ON \
                -DCUTTER_USE_BUNDLED_RADARE2=ON \
                -DBREAKPAD_FRAMEWORK_DIR="$BREAKPAD_FRAMEWORK_DIR" \
                ../src && \
              make -j4;
